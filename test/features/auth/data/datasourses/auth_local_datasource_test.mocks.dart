// Mocks generated by Mockito 5.4.4 from annotations
// in doc_app/test/features/auth/data/datasourses/auth_local_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:doc_app/core/database/cache/cache_helper.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CacheHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheHelper extends _i1.Mock implements _i2.CacheHelper {
  MockCacheHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> appInitialization() => (super.noSuchMethod(
        Invocation.method(
          #appInitialization,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<bool> cacheData({
    required String? key,
    required dynamic value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheData,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  dynamic getData({required String? key}) =>
      super.noSuchMethod(Invocation.method(
        #getData,
        [],
        {#key: key},
      ));

  @override
  _i3.Future<bool> removeData({required String? key}) => (super.noSuchMethod(
        Invocation.method(
          #removeData,
          [],
          {#key: key},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> clearData() => (super.noSuchMethod(
        Invocation.method(
          #clearData,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
